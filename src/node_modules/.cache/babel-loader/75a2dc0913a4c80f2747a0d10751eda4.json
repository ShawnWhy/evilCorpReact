{"ast":null,"code":"import _defineProperty from \"C:\\\\bootcamp2019\\\\evilCorpReact\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\bootcamp2019\\\\evilCorpReact\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\bootcamp2019\\\\evilCorpReact\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\bootcamp2019\\\\evilCorpReact\\\\src\\\\src\\\\components\\\\employeeContainer\\\\index.js\";\n\n/* eslint-disable no-lone-blocks */\nimport React, { useEffect, useState } from \"react\";\nimport Moment from 'react-moment'; // import 'moment-timezone';\n\nimport API from \"../../util/API\";\nimport EmployeeCard from \"../employee card/index\";\nimport SideBar from \"../sideBar/index\";\nimport \"./Style.css\";\n\nfunction EmployeeContainer() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([{\n    firstname: \"shiawn\",\n    lastname: \"Yu\",\n    password: \"password\",\n    race: \"robot\",\n    position: \"manager\"\n  }, {\n    firstname: \"shit\",\n    lastname: \"ass\",\n    password: \"password\",\n    race: \"robot\",\n    position: \"manager\"\n  }, {\n    firstname: \"boot\",\n    lastname: \"crap\",\n    password: \"password\",\n    race: \"robot\",\n    position: \"manager\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      employees = _useState2[0],\n      setEmployees = _useState2[1];\n\n  var _useState3 = useState({\n    firstname: \"\",\n    lastname: \"\",\n    position: \"\",\n    password: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      login = _useState4[0],\n      setLogin = _useState4[1];\n\n  var _useState5 = useState({\n    firstname: \"Puny\",\n    lastname: \"human\",\n    position: \"manager\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      me = _useState6[0],\n      setMe = _useState6[1];\n\n  var _useState7 = useState({\n    backgroundColor: \"\",\n    message: \"\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      alert = _useState8[0],\n      setAlert = _useState8[1];\n\n  var _useState9 = useState(\"sortByLastName\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sort = _useState10[0],\n      setSort = _useState10[1];\n\n  useEffect(function () {\n    loadEmployees();\n  }, [me]);\n  useEffect(function () {\n    loadEmployees();\n  }, [sort]);\n\n  function loadEmployeesTwo(res) {\n    var employeeList = res.data;\n    var newEmployeeList = [];\n\n    if (employeeList.length > 0) {\n      switch (me.position) {\n        case \"manager\":\n          {\n            employeeList.forEach(function (person) {\n              var employee = {\n                _id: person._id,\n                firstname: person.firstname,\n                lastname: person.lastname,\n                imageClass: \"\".concat(person.race, \"Photo\"),\n                buttonClass: \"managerFireButton\",\n                position: person.position\n              };\n              newEmployeeList.push(employee);\n            });\n          }\n          break;\n\n        default:\n          {\n            employeeList.forEach(function (person) {\n              var employee = {\n                _id: person._id,\n                firstname: person.firstname,\n                lastname: person.lastname,\n                imageClass: \"humanPhoto\",\n                buttonClass: \"employeeFireButton\",\n                position: person.position\n              };\n              newEmployeeList.push(employee);\n            });\n          }\n      }\n    }\n\n    setEmployees(newEmployeeList);\n  }\n\n  function loadEmployees() {\n    console.log(\"sorting\");\n\n    switch (sort) {\n      case \"sortByLastName\":\n        console.log(\"loadingbylastname\");\n        API.getAllEmployees().then(function (res) {\n          return loadEmployeesTwo(res);\n        });\n        break;\n\n      case \"sortByPosition\":\n        console.log(\"loadingbyposition\");\n        API.getAllEmployeesPositionSort().then(function (res) {\n          return loadEmployeesTwo(res);\n        });\n        break;\n\n      case \"sortByDate\":\n        console.log(\"loadingbudate\");\n        API.getAllEmployeesDateSort().then(function (res) {\n          return loadEmployeesTwo(res);\n        });\n        break;\n\n      case \"managers\":\n        console.log(\"loadingmanagers\");\n        API.getAllManagers().then(function (res) {\n          return loadEmployeesTwo(res);\n        });\n        break;\n    }\n  }\n\n  function handleChangeSort(event) {\n    setSort(event.target.value);\n  } // Deletes a book from the database with a given id, then reloads books from the db\n\n\n  function fireEmployee(event) {\n    var deleteid = event.target.getAttribute(\"keyid\");\n    console.log(deleteid);\n    API.fireEmployee(deleteid).then(function (res) {\n      return loadEmployees();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  function handleHire(event) {\n    event.preventDefault();\n    API.hireEmployee({\n      firstname: login.firstname,\n      lastname: login.lastname,\n      password: login.password,\n      position: login.position\n    }).then(function (res) {\n      return loadEmployees();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value; // console.log(name, value);\n\n    setLogin(_objectSpread({}, login, _defineProperty({}, name, value)));\n  }\n\n  ; // When the form is submitFconted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleLogin() {\n    console.log(\"login\");\n\n    if (login.firstname && login.lastname && login.password) {\n      API.getEmployee({\n        \"firstname\": login.firstname,\n        \"lastname\": login.lastname,\n        \"password\": login.password\n      }).then(function (data) {\n        console.log(data);\n        setMe({\n          firstname: data.data.firstname,\n          lastname: data.data.lastname,\n          position: data.data.position\n        });\n      }).then(function () {\n        return setLogin({\n          firstname: \"\",\n          lastname: \"\",\n          password: \"\"\n        });\n      }).catch(function (err) {\n        setAlert({\n          backgroundColor: \"red\",\n          message: \"can't find you my friend\"\n        });\n        setTimeout(setAlert({\n          backgroundColor: \"white\",\n          message: \"\"\n        }), 1000);\n      });\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 offset-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    meFirstname: me.firstname,\n    meLastname: me.lastname,\n    mePosition: me.position,\n    handleLogin: handleLogin,\n    handleHire: handleHire,\n    handleInputChange: handleInputChange,\n    loginfirstname: login.firstname,\n    loginlastname: login.lastname,\n    loginPosition: login.position,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 \" + (me.position === \"manager\" ? 'manager' : 'employee'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 12\n    }\n  }, \"sorting the employees by : \", sort), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChangeSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sortByLastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 14\n    }\n  }, \"all employees sort by last name\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sortByPosition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 14\n    }\n  }, \"all employees sort by position\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sortByDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 14\n    }\n  }, \"all employees sort by hiredate\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"managers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 14\n    }\n  }, \"only managers\"))), /*#__PURE__*/React.createElement(\"div\", {\n    size: \"xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 8\n    }\n  }, !employees.length ? /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 12\n    }\n  }, \"employees\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 12\n    }\n  }, employees.map(function (employee) {\n    return /*#__PURE__*/React.createElement(EmployeeCard, {\n      key: employee._id,\n      id: employee._id,\n      firstname: employee.firstname,\n      lastname: employee.lastname,\n      position: employee.position,\n      photoClass: employee.imageClass,\n      buttonClass: employee.buttonClass,\n      fireEmployee: fireEmployee,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 18\n      }\n    });\n  })))));\n}\n\nexport default EmployeeContainer;","map":{"version":3,"sources":["C:/bootcamp2019/evilCorpReact/src/src/components/employeeContainer/index.js"],"names":["React","useEffect","useState","Moment","API","EmployeeCard","SideBar","EmployeeContainer","firstname","lastname","password","race","position","employees","setEmployees","login","setLogin","me","setMe","backgroundColor","message","alert","setAlert","sort","setSort","loadEmployees","loadEmployeesTwo","res","employeeList","data","newEmployeeList","length","forEach","person","employee","_id","imageClass","buttonClass","push","console","log","getAllEmployees","then","getAllEmployeesPositionSort","getAllEmployeesDateSort","getAllManagers","handleChangeSort","event","target","value","fireEmployee","deleteid","getAttribute","catch","err","handleHire","preventDefault","hireEmployee","handleInputChange","name","handleLogin","getEmployee","setTimeout","map"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAQC,OAAR,MAAqB,kBAArB;AACA,OAAQ,aAAR;;AAGA,SAASC,iBAAT,GAA6B;AAAA;;AAC3B;AAD2B,kBAEOL,QAAQ,CAAC,CAG3C;AAACM,IAAAA,SAAS,EAAC,QAAX;AAAoBC,IAAAA,QAAQ,EAAC,IAA7B;AAAkCC,IAAAA,QAAQ,EAAC,UAA3C;AAAsDC,IAAAA,IAAI,EAAC,OAA3D;AAAmEC,IAAAA,QAAQ,EAAC;AAA5E,GAH2C,EAI3C;AAACJ,IAAAA,SAAS,EAAC,MAAX;AAAkBC,IAAAA,QAAQ,EAAC,KAA3B;AAAiCC,IAAAA,QAAQ,EAAC,UAA1C;AAAqDC,IAAAA,IAAI,EAAC,OAA1D;AAAkEC,IAAAA,QAAQ,EAAC;AAA3E,GAJ2C,EAK3C;AAACJ,IAAAA,SAAS,EAAC,MAAX;AAAkBC,IAAAA,QAAQ,EAAC,MAA3B;AAAkCC,IAAAA,QAAQ,EAAC,UAA3C;AAAsDC,IAAAA,IAAI,EAAC,OAA3D;AAAmEC,IAAAA,QAAQ,EAAC;AAA5E,GAL2C,CAAD,CAFf;AAAA;AAAA,MAEpBC,SAFoB;AAAA,MAETC,YAFS;;AAAA,mBASDZ,QAAQ,CAAC;AACjCM,IAAAA,SAAS,EAAC,EADuB;AAEjCC,IAAAA,QAAQ,EAAC,EAFwB;AAGjCG,IAAAA,QAAQ,EAAC,EAHwB;AAIjCF,IAAAA,QAAQ,EAAC;AAJwB,GAAD,CATP;AAAA;AAAA,MASpBK,KAToB;AAAA,MASbC,QATa;;AAAA,mBAePd,QAAQ,CAAC;AAC3BM,IAAAA,SAAS,EAAC,MADiB;AAE3BC,IAAAA,QAAQ,EAAC,OAFkB;AAG3BG,IAAAA,QAAQ,EAAC;AAHkB,GAAD,CAfD;AAAA;AAAA,MAepBK,EAfoB;AAAA,MAehBC,KAfgB;;AAAA,mBAoBFhB,QAAQ,CAAC;AAChCiB,IAAAA,eAAe,EAAC,EADgB;AAEhCC,IAAAA,OAAO,EAAC;AAFwB,GAAD,CApBN;AAAA;AAAA,MAoBrBC,KApBqB;AAAA,MAoBdC,QApBc;;AAAA,mBAyBNpB,QAAQ,CACzB,gBADyB,CAzBF;AAAA;AAAA,MAyBrBqB,IAzBqB;AAAA,MAyBfC,OAzBe;;AA6B3BvB,EAAAA,SAAS,CAAC,YAAM;AACdwB,IAAAA,aAAa;AAEd,GAHQ,EAGN,CAACR,EAAD,CAHM,CAAT;AAIAhB,EAAAA,SAAS,CAAC,YAAM;AACdwB,IAAAA,aAAa;AAEd,GAHQ,EAGN,CAACF,IAAD,CAHM,CAAT;;AAOF,WAASG,gBAAT,CAA0BC,GAA1B,EAA8B;AAC5B,QAAIC,YAAY,GAAGD,GAAG,CAACE,IAAvB;AACA,QAAIC,eAAe,GAAG,EAAtB;;AACA,QAAGF,YAAY,CAACG,MAAb,GAAoB,CAAvB,EAAyB;AACvB,cAAQd,EAAE,CAACL,QAAX;AACE,aAAK,SAAL;AAAe;AACbgB,YAAAA,YAAY,CAACI,OAAb,CAAqB,UAAAC,MAAM,EAAG;AAC5B,kBAAIC,QAAQ,GAAC;AACXC,gBAAAA,GAAG,EAACF,MAAM,CAACE,GADA;AAEX3B,gBAAAA,SAAS,EAACyB,MAAM,CAACzB,SAFN;AAGXC,gBAAAA,QAAQ,EAACwB,MAAM,CAACxB,QAHL;AAIX2B,gBAAAA,UAAU,YAAIH,MAAM,CAACtB,IAAX,UAJC;AAKX0B,gBAAAA,WAAW,EAAC,mBALD;AAOXzB,gBAAAA,QAAQ,EAACqB,MAAM,CAACrB;AAPL,eAAb;AASAkB,cAAAA,eAAe,CAACQ,IAAhB,CAAqBJ,QAArB;AAAgC,aAVlC;AAWI;AAEN;;AACA;AAAQ;AACNN,YAAAA,YAAY,CAACI,OAAb,CAAqB,UAAAC,MAAM,EAAG;AAC5B,kBAAIC,QAAQ,GAAC;AACXC,gBAAAA,GAAG,EAACF,MAAM,CAACE,GADA;AAEX3B,gBAAAA,SAAS,EAACyB,MAAM,CAACzB,SAFN;AAGXC,gBAAAA,QAAQ,EAACwB,MAAM,CAACxB,QAHL;AAIX2B,gBAAAA,UAAU,EAAC,YAJA;AAKXC,gBAAAA,WAAW,EAAC,oBALD;AAMXzB,gBAAAA,QAAQ,EAACqB,MAAM,CAACrB;AANL,eAAb;AAQAkB,cAAAA,eAAe,CAACQ,IAAhB,CAAqBJ,QAArB;AAAgC,aATlC;AAUI;AA3BR;AA6BC;;AAAGpB,IAAAA,YAAY,CAACgB,eAAD,CAAZ;AAEP;;AAGD,WAASL,aAAT,GAAyB;AACvBc,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,YAAOjB,IAAP;AACC,WAAK,gBAAL;AACCgB,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEApC,QAAAA,GAAG,CAACqC,eAAJ,GACCC,IADD,CACM,UAAAf,GAAG;AAAA,iBAAID,gBAAgB,CAACC,GAAD,CAApB;AAAA,SADT;AAEA;;AAEA,WAAK,gBAAL;AACEY,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEApC,QAAAA,GAAG,CAACuC,2BAAJ,GACCD,IADD,CACM,UAAAf,GAAG;AAAA,iBAAGD,gBAAgB,CAACC,GAAD,CAAnB;AAAA,SADT;AAEA;;AAEF,WAAK,YAAL;AACEY,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEApC,QAAAA,GAAG,CAACwC,uBAAJ,GACCF,IADD,CACM,UAAAf,GAAG;AAAA,iBAAGD,gBAAgB,CAACC,GAAD,CAAnB;AAAA,SADT;AAEA;;AAEF,WAAK,UAAL;AACEY,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACApC,QAAAA,GAAG,CAACyC,cAAJ,GACCH,IADD,CACM,UAAAf,GAAG;AAAA,iBAAGD,gBAAgB,CAACC,GAAD,CAAnB;AAAA,SADT;AAEA;AA1BJ;AA8BD;;AAED,WAASmB,gBAAT,CAA0BC,KAA1B,EAAgC;AAChCvB,IAAAA,OAAO,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AAEC,GAnH4B,CAwH3B;;;AACA,WAASC,YAAT,CAAsBH,KAAtB,EAA6B;AAC3B,QAAII,QAAQ,GAACJ,KAAK,CAACC,MAAN,CAAaI,YAAb,CAA0B,OAA1B,CAAb;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AACA/C,IAAAA,GAAG,CAAC8C,YAAJ,CAAiBC,QAAjB,EACGT,IADH,CACQ,UAAAf,GAAG;AAAA,aAAIF,aAAa,EAAjB;AAAA,KADX,EAEG4B,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CAAJ;AAAA,KAFZ;AAGD;;AACD,WAASC,UAAT,CAAoBR,KAApB,EAA0B;AACxBA,IAAAA,KAAK,CAACS,cAAN;AACApD,IAAAA,GAAG,CAACqD,YAAJ,CAAiB;AACfjD,MAAAA,SAAS,EAAEO,KAAK,CAACP,SADF;AAEfC,MAAAA,QAAQ,EAAEM,KAAK,CAACN,QAFD;AAGfC,MAAAA,QAAQ,EAAEK,KAAK,CAACL,QAHD;AAIfE,MAAAA,QAAQ,EAAEG,KAAK,CAACH;AAJD,KAAjB,EAOC8B,IAPD,CAOM,UAAAf,GAAG;AAAA,aAAIF,aAAa,EAAjB;AAAA,KAPT,EAQC4B,KARD,CAQO,UAAAC,GAAG;AAAA,aAAIf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CAAJ;AAAA,KARV;AAUD,GA5I0B,CA8I3B;;;AACA,WAASI,iBAAT,CAA2BX,KAA3B,EAAkC;AAAA,wBACRA,KAAK,CAACC,MADE;AAAA,QACxBW,IADwB,iBACxBA,IADwB;AAAA,QAClBV,KADkB,iBAClBA,KADkB,EAEhC;;AACAjC,IAAAA,QAAQ,mBAAKD,KAAL,sBAAa4C,IAAb,EAAoBV,KAApB,GAAR;AACD;;AAAA,GAnJ0B,CAqJ3B;AACA;;AACA,WAASW,WAAT,GAAuB;AACrBrB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,QAAIzB,KAAK,CAACP,SAAN,IAAmBO,KAAK,CAACN,QAAzB,IAAqCM,KAAK,CAACL,QAA/C,EAAyD;AACvDN,MAAAA,GAAG,CAACyD,WAAJ,CAAgB;AACd,qBAAa9C,KAAK,CAACP,SADL;AAEd,oBAAYO,KAAK,CAACN,QAFJ;AAGd,oBAAYM,KAAK,CAACL;AAHJ,OAAhB,EAKCgC,IALD,CAKM,UAACb,IAAD,EAAS;AACbU,QAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACFX,QAAAA,KAAK,CAAC;AACJV,UAAAA,SAAS,EAACqB,IAAI,CAACA,IAAL,CAAUrB,SADhB;AAEJC,UAAAA,QAAQ,EAACoB,IAAI,CAACA,IAAL,CAAUpB,QAFf;AAGJG,UAAAA,QAAQ,EAACiB,IAAI,CAACA,IAAL,CAAUjB;AAHf,SAAD,CAAL;AAIG,OAXH,EAYG8B,IAZH,CAYQ;AAAA,eAAM1B,QAAQ,CAAC;AACnBR,UAAAA,SAAS,EAAE,EADQ;AAEnBC,UAAAA,QAAQ,EAAE,EAFS;AAGnBC,UAAAA,QAAQ,EAAE;AAHS,SAAD,CAAd;AAAA,OAZR,EAiBG2C,KAjBH,CAiBS,UAAAC,GAAG,EAAI;AAEZhC,QAAAA,QAAQ,CAAC;AACPH,UAAAA,eAAe,EAAC,KADT;AAEPC,UAAAA,OAAO,EAAC;AAFD,SAAD,CAAR;AAKA0C,QAAAA,UAAU,CAACxC,QAAQ,CAAC;AAClBH,UAAAA,eAAe,EAAC,OADE;AAElBC,UAAAA,OAAO,EAAC;AAFU,SAAD,CAAT,EAEK,IAFL,CAAV;AAKE,OA7BN;AA8BD;AACF;;AAAA;AAEC,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AACA,IAAA,WAAW,EAAEH,EAAE,CAACT,SADhB;AAEA,IAAA,UAAU,EAAES,EAAE,CAACR,QAFf;AAGA,IAAA,UAAU,EAAEQ,EAAE,CAACL,QAHf;AAKA,IAAA,WAAW,EAAIgD,WALf;AAMA,IAAA,UAAU,EAAEL,UANZ;AAOA,IAAA,iBAAiB,EAAEG,iBAPnB;AAQA,IAAA,cAAc,EAAE3C,KAAK,CAACP,SARtB;AASA,IAAA,aAAa,EAAEO,KAAK,CAACN,QATrB;AAUA,IAAA,aAAa,EAAEM,KAAK,CAACH,QAVrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,eAsBC;AAAK,IAAA,SAAS,EAAG,eAAaK,EAAE,CAACL,QAAH,KAAc,SAAd,GAAyB,SAAzB,GAAmC,UAAhD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA+BW,IAA/B,CADF,eAEE;AAAQ,IAAA,QAAQ,EAAIuB,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAG,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAEE;AAAQ,IAAA,KAAK,EAAG,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,eAGE;AAAQ,IAAA,KAAK,EAAG,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHF,eAIE;AAAQ,IAAA,KAAK,EAAG,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CAFF,CADF,eAUA;AAAK,IAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACjC,SAAS,CAACkB,MAAX,gBACC;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,SAAS,CAACkD,GAAV,CAAc,UAAA7B,QAAQ,EAAI;AACzB,wBACE,oBAAC,YAAD;AACG,MAAA,GAAG,EAAIA,QAAQ,CAACC,GADnB;AAEE,MAAA,EAAE,EAAED,QAAQ,CAACC,GAFf;AAGE,MAAA,SAAS,EAAED,QAAQ,CAAC1B,SAHtB;AAIE,MAAA,QAAQ,EAAE0B,QAAQ,CAACzB,QAJrB;AAKE,MAAA,QAAQ,EAAEyB,QAAQ,CAACtB,QALrB;AAME,MAAA,UAAU,EAAEsB,QAAQ,CAACE,UANvB;AAOE,MAAA,WAAW,EAAEF,QAAQ,CAACG,WAPxB;AAQE,MAAA,YAAY,EAAEa,YARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD,GAdA,CADH,CAJJ,CAVA,CAtBD,CADF;AA6DD;;AAGH,eAAe3C,iBAAf","sourcesContent":["/* eslint-disable no-lone-blocks */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Moment from 'react-moment';\r\n// import 'moment-timezone';\r\nimport API from \"../../util/API\";\r\nimport EmployeeCard from \"../employee card/index\"\r\nimport  SideBar from \"../sideBar/index\";\r\nimport  \"./Style.css\"\r\n\r\n\r\nfunction EmployeeContainer() {\r\n  // Setting our component's initial state\r\n  const [employees, setEmployees] = useState([\r\n\r\n\r\n  {firstname:\"shiawn\",lastname:\"Yu\",password:\"password\",race:\"robot\",position:\"manager\"},\r\n  {firstname:\"shit\",lastname:\"ass\",password:\"password\",race:\"robot\",position:\"manager\"},\r\n  {firstname:\"boot\",lastname:\"crap\",password:\"password\",race:\"robot\",position:\"manager\"},\r\n  ])\r\n  const [login, setLogin] = useState({\r\n    firstname:\"\",\r\n    lastname:\"\",\r\n    position:\"\",\r\n    password:\"\"\r\n  })\r\n  const [me, setMe] = useState({\r\n    firstname:\"Puny\",\r\n    lastname:\"human\",\r\n    position:\"manager\"\r\n    })\r\n  const[alert, setAlert] = useState({\r\n    backgroundColor:\"\",\r\n    message:\"\"\r\n    })\r\n\r\n  const[sort, setSort]=useState(\r\n      \"sortByLastName\"\r\n    )\r\n  \r\n  useEffect(() => {\r\n    loadEmployees()\r\n   \r\n  }, [me]);\r\n  useEffect(() => {\r\n    loadEmployees()\r\n   \r\n  }, [sort]);\r\n\r\n \r\n \r\nfunction loadEmployeesTwo(res){\r\n  var employeeList = res.data\r\n  var newEmployeeList = [];\r\n  if(employeeList.length>0){\r\n    switch (me.position){\r\n      case \"manager\":{\r\n        employeeList.forEach(person=> {\r\n          var employee={\r\n            _id:person._id,\r\n            firstname:person.firstname,\r\n            lastname:person.lastname,\r\n            imageClass:`${person.race}Photo`,\r\n            buttonClass:\"managerFireButton\",\r\n\r\n            position:person.position\r\n          }\r\n          newEmployeeList.push(employee);}\r\n          )}\r\n\r\n      break;\r\n      default:{\r\n        employeeList.forEach(person=> {\r\n          var employee={\r\n            _id:person._id,\r\n            firstname:person.firstname,\r\n            lastname:person.lastname,\r\n            imageClass:\"humanPhoto\",\r\n            buttonClass:\"employeeFireButton\",\r\n            position:person.position\r\n          }\r\n          newEmployeeList.push(employee);}\r\n          )}\r\n        }\r\n    }   setEmployees(newEmployeeList)\r\n\r\n}\r\n\r\n\r\nfunction loadEmployees() {\r\n  console.log(\"sorting\")\r\n  switch(sort){\r\n   case \"sortByLastName\":\r\n    console.log(\"loadingbylastname\")\r\n\r\n    API.getAllEmployees()\r\n    .then(res => loadEmployeesTwo(res));\r\n    break;\r\n\r\n    case \"sortByPosition\":\r\n      console.log(\"loadingbyposition\")\r\n\r\n      API.getAllEmployeesPositionSort()\r\n      .then(res=> loadEmployeesTwo(res));\r\n      break;\r\n\r\n    case \"sortByDate\":\r\n      console.log(\"loadingbudate\")\r\n\r\n      API.getAllEmployeesDateSort()\r\n      .then(res=> loadEmployeesTwo(res));\r\n      break;\r\n\r\n    case \"managers\":\r\n      console.log(\"loadingmanagers\")\r\n      API.getAllManagers()\r\n      .then(res=> loadEmployeesTwo(res));\r\n      break;\r\n\r\n\r\n  }\r\n}\r\n\r\nfunction handleChangeSort(event){\r\nsetSort(event.target.value)\r\n\r\n}\r\n   \r\n      \r\n    \r\n\r\n  // Deletes a book from the database with a given id, then reloads books from the db\r\n  function fireEmployee(event) {\r\n    var deleteid=event.target.getAttribute(\"keyid\");\r\n    console.log(deleteid)\r\n    API.fireEmployee(deleteid)\r\n      .then(res => loadEmployees())\r\n      .catch(err => console.log(err));\r\n  }\r\n  function handleHire(event){\r\n    event.preventDefault();\r\n    API.hireEmployee({\r\n      firstname: login.firstname,\r\n      lastname: login.lastname,\r\n      password: login.password,\r\n      position: login.position\r\n\r\n    })\r\n    .then(res => loadEmployees())\r\n    .catch(err => console.log(err));\r\n\r\n  }\r\n\r\n  // Handles updating component state when the user types into the input field\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    // console.log(name, value);\r\n    setLogin({...login, [name]: value})\r\n  };\r\n\r\n  // When the form is submitFconted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n  function handleLogin() {\r\n    console.log(\"login\");\r\n    if (login.firstname && login.lastname && login.password) {\r\n      API.getEmployee({\r\n        \"firstname\": login.firstname,\r\n        \"lastname\": login.lastname,\r\n        \"password\": login.password,\r\n      })\r\n      .then((data)=> {\r\n        console.log(data);\r\n      setMe({\r\n        firstname:data.data.firstname,\r\n        lastname:data.data.lastname,\r\n        position:data.data.position\r\n      })})\r\n        .then(() => setLogin({\r\n          firstname: \"\",\r\n          lastname: \"\",\r\n          password: \"\"\r\n        }))\r\n        .catch(err => {\r\n          \r\n          setAlert({\r\n            backgroundColor:\"red\",\r\n            message:\"can't find you my friend\"\r\n\r\n          });\r\n          setTimeout(setAlert({\r\n            backgroundColor:\"white\",\r\n            message:\"\"}),1000\r\n\r\n\r\n          )} );\r\n    }\r\n  };\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 offset-md-2\">\r\n        <SideBar\r\n        meFirstname={me.firstname}\r\n        meLastname={me.lastname}\r\n        mePosition={me.position}\r\n      \r\n        handleLogin = {handleLogin}\r\n        handleHire={handleHire}\r\n        handleInputChange={handleInputChange}\r\n        loginfirstname={login.firstname}\r\n        loginlastname={login.lastname}\r\n        loginPosition={login.position}\r\n        \r\n        />\r\n       \r\n        \r\n        \r\n        \r\n        </div>\r\n        {/* {\"btn-group pull-right \" + (this.props.showBulkActions ? 'show' : 'hidden')} */}\r\n      \r\n       <div className= {\"col-md-6 \"+(me.position===\"manager\"? 'manager':'employee' )}>\r\n         <div>\r\n           <p>sorting the employees by : {sort}</p>\r\n           <select onChange = {handleChangeSort}>\r\n             <option value = \"sortByLastName\">all employees sort by last name</option>\r\n             <option value = \"sortByPosition\">all employees sort by position</option>\r\n             <option value = \"sortByDate\">all employees sort by hiredate</option>\r\n             <option value = \"managers\">only managers</option>\r\n             </select>\r\n         </div>\r\n       <div size=\"xs-12\">\r\n         {!employees.length ? (\r\n           <h1 className=\"text-center\">employees</h1>\r\n         ) : (\r\n           <div>\r\n             {employees.map(employee => {\r\n               return (\r\n                 <EmployeeCard\r\n                    key = {employee._id}\r\n                   id={employee._id}\r\n                   firstname={employee.firstname}\r\n                   lastname={employee.lastname}\r\n                   position={employee.position}\r\n                   photoClass={employee.imageClass}\r\n                   buttonClass={employee.buttonClass}\r\n                   fireEmployee={fireEmployee}\r\n                   \r\n                 />\r\n               );\r\n             })}\r\n           </div>\r\n         )}\r\n       </div>\r\n     </div>\r\n     </div>\r\n\r\n\r\n    );\r\n  }\r\n\r\n\r\nexport default EmployeeContainer;\r\n"]},"metadata":{},"sourceType":"module"}